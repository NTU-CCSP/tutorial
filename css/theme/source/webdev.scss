@charset 'utf-8';

// Default mixins and settings -----------------
@import "../template/mixins";
@import "../template/settings";
// ---------------------------------------------

// Include theme-specific fonts
@import url(http://fonts.googleapis.com/css?family=Lato:300,400,700);

$headingFont: Lato, "LiHei Pro", "儷黑Pro", "微軟正黑體", "Microsoft JhengHei", Impact, sans-serif;
$mainFont: Lato, "ヒラギノ角ゴ Pro", "Hiragino Kaku Gothic Pro", "微軟正黑體", "Microsoft JhengHei", sans-serif;

// Override theme settings (see ../template/settings.scss)
$mainColor: #333;
$headingColor: #333;
$headingTextShadow: none;
$backgroundColor: #fafafa;
$headingTextTransform: none;
$linkColor: #8b743d;
$linkColorHover: lighten( $linkColor, 20% );
$selectionBackgroundColor: rgba(79, 64, 28, 0.99);
$heading1TextShadow: 0 2px #fff;


// Background generator
@mixin bodyBackground() {
	// @include radial-gradient( rgba(247,242,211,1), rgba(255,255,255,1) );
  /* http://subtlepatterns.com/inspiration-geometry/ */
  background: url('../../images/geometry.png');
}


// Theme template ------------------------------
@import "../template/theme";
// ---------------------------------------------

// Custom rules --------------------------------

.reveal{

  font-weight: lighter;

  h1, h2, h3, h4, h5, h6{
    font-weight: normal;
  }

 .searchdiv{
    position: absolute;
    top: 1em;
    left: 50%;
    $width: 250px;
    width: $width;
    margin-left: -$width/2;
  }

  .nav{
    margin-left: 0;
  }

  .nav li{
    display: inline-block;
    margin: 0.3em 0;
    padding: 0 0.5em;
    border-left: 1px dotted #999;
    &:first-child{
      border-left: 0;
    }
  }

  .first{
    h1{
      font-size: 400%;
      font-weight: bold;
    }
  }

  section.title{
    &:after{
      font-size: 300%;
      margin-top: 1em;
      color: rgba(#000, .3);
      text-shadow: 0 2px 3px #fff;
      content: '⇣';
      display: block;
    }
  }


  // Overriding border if src ends with "?borderless"
  img[src$=borderless]{
    border: 0;
    box-shadow: none;
    background: transparent;
  }
  a:hover img[src$=borderless]{
    border: 0;
    box-shadow: none;
    background: transparent;
  }

  // Make span.fragment.grow work.
  span.fragment.grow{
    display: inline-block;
  }
}

.reveal .leader{
  margin-top: 1em;
}

.trailer{
  margin-bottom: 1em;
}

kbd, .reveal kbd{
  display: inline-block;
  vertical-align: bottom;
  padding: 0.1em 0.5em;
  font-size: 80%;
  border-radius: 6px;
  @include vertical-gradient(#fff, #eee);
  color: #555;
  box-shadow: inset 0 -2px 1px rgba(#fff, 0.3), 0 3px #ccc, 0 4px #bbb, 0 5px #aaa, 0 5px 10px rgba(#000, .4);
}

p>code, li>code{
  color: #45898b;
  font-family: Monaco, Consolas, monospace;
}

#searchinputdiv{
  z-index: 10;
}
#searchinput{
  // vertical-align: top;
  display: none;
  font-size: 16px;
  width: 100%;
}

// Table

.reveal{
  table{
    font-size: 75%;
    width: 100%;
    border-collapse: collapse;

    td, th{
      vertical-align: middle;
      border: 1px solid #333;
      text-align: center;
      small{
        vertical-align: middle;
      }
    }
  }

  pre.small{
    font-size: .5em;
  }
}

// Reveal grid
$gutter: 10px;
$columns: 6;

.row, .reveal .row{
  $span-width: 100%/$columns;
  overflow: auto; // clear fix.
  // box-sizing: border-box;
  margin: $gutter*2 (-$gutter);

  %span-base{
    box-sizing: border-box;
    padding: 0 $gutter;
    float: left;

    img{
      width: 100%;
      margin: 0;
      vertical-align: bottom;
    }
  }

  @for $i from 1 through $columns{
    .span#{$i} {
      @extend %span-base;
      width: $span-width * $i;
    }
    .offset#{$i} {
      margin-left: $span-width * $i;
    }
  }
  .centered{
    float: none;
    margin: 0 auto;
  }
}

@media print{
  a:after{
    content: '[' attr(href) ']';
  }
}